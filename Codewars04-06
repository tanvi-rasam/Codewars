Q1] Consider an array/list of sheep where some sheep may be missing from their place. We need a function that counts the number of sheep present in the array (true means present).

For example,

[true,  true,  true,  false,
  true,  true,  true,  true ,
  true,  false, true,  false,
  true,  false, false, true ,
  true,  true,  true,  true ,
  false, false, true,  true]
The correct answer would be 17.

Hint: Don't forget to check for bad values like null/undefined

Solution:

function countSheeps(arrayOfSheep) {
  // TODO May the force be with you
  //1: 
  return arrayOfSheep.reduce(((acc,currVal)=>acc+(currVal?1:0)),0) // as there can be null/undefined in currVal

  //2:
  return arrayOfSheep.filter(Boolean).length;
}



Q2] Complete the square sum function so that it squares each number passed into it and then sums the results together.

For example, for [1, 2, 2] it should return 9 because 1^2 + 2^2 + 2^2 = 9.

Solution-

function squareSum(numbers){
  
  //1:
  //return Math.pow(numbers[0],2) + (numbers.length !== 1?squareSum(numbers.slice(1)):0) ;
  
  //2:
  return numbers.reduce(((acc,currVal)=>acc + Math.pow(currVal,2)),0)
}



Q3] The first century spans from the year 1 up to and including the year 100, The second - from the year 101 up to and including the year 200, etc.

Task :
Given a year, return the century it is in.

Input , Output Examples :
1705 --> 18
1900 --> 19
1601 --> 17
2000 --> 20

Solution-
function century(year) {
  //1:
	 return year%100? Math.floor(year/100 +1): year/100;
  // 2:
  return Math.ceil(year/100);
}

