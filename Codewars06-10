Q1] Write a function that rearranges an integer into its largest possible value.

Example (Input --> Output)

123456 --> 654321
105 --> 510
12 --> 21
If the argument passed through is single digit or is already the maximum possible integer, your function should simply return it.

Solution-

function superSize(num){
  return +('' + num).split('').sort((a,b) => b - a).join('');
}

function superSize(num){
  return parseInt(num.toString().split('').sort((a,b) => b - a).join(''));
}


Q2] Triple Trouble
Create a function that will return a string that combines all of the letters of the three inputed strings in groups. Taking the first letter of all of the inputs and grouping them next to each other. Do this for every letter, see example below!

E.g. Input: "aa", "bb" , "cc" => Output: "abcabc"

Note: You can expect all of the inputs to be the same length.

SOlution-

function tripleTrouble(one, two, three){
  var res = '';
  for(var i = 0; i< one.length; i++) {
    res += (one[i] + two[i] + three[i]);
  }
  return res;
 }
 
 function tripleTrouble(one, two, three){
  return one.split('').reduce((a,c,i) => a + c + two[i] + three[i],'');
 }
 
 function tripleTrouble(one, two, three){
  return one.replace(/./g, (letter,i) => letter + two[i] + three[i]);
 }
 
 Q3] What if we need the length of the words separated by a space to be added at the end of that same word and have it returned as an array?

addLength('apple ban') => ["apple 5", "ban 3"]
addLength('you will win') => ["you 3", "will 4", "win 3"]
Your task is to write a function that takes a String and returns an Array/list with the length of each word added to each element .

Note: String will have at least one element; words will always be separated by a space.

Solution-
function addLength(str) {
  return str
          .split(' ')
          .map(x => x + ` ${x.length}`);
}


