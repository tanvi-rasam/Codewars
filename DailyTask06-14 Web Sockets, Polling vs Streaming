Web Sockets

- At its core, the WebSocket protocol facilitates message passing between a client and server. 
A WebSocket is a persistent connection between a client and server. WebSockets provide a bidirectional, full-duplex communications channel that operates over HTTP through a single TCP/IP socket connection.

- The idea of WebSockets was borne out of the limitations of HTTP-based technology. With HTTP, a client requests a resource, and the server responds with the requested data. HTTP is a strictly unidirectional protocol — any data sent from the server to the client must be first requested by the client. 

- Long-polling has traditionally acted as a workaround for this limitation. With long-polling, a client makes an HTTP request with a long timeout period, and the server uses that long timeout to push data to the client. Long-polling works, but comes with a drawback — resources on the server are tied up throughout the length of the long-poll, even when no data is available to send.

- WebSockets, on the other hand, allow for sending message-based data, similar to UDP, but with the reliability of TCP. WebSocket uses HTTP as the initial transport mechanism, but keeps the TCP connection alive after the HTTP response is received so that it can be used for sending messages between client and server. 

- It starts from ws:// or wss://


Polling and Streaming 

- It decides on at what frequency do we need to update the data

Polling
It is defined as the process when a client requests a particular piece of data at regular intervals (maybe every x seconds) and the server reverts with a usual response with the required data.

eg- building a dashboard than monitors stock prices or have such a use-case here you may prefer polling as there is no real need of open connection and every 30 sec you can get the data updated.

Streaming
-Streaming is done through sockets, the client listens openly with no external request of data from the server. On the server-side, for streaming, it would not wait for data to send for every request but will push the data as it notices any changes. Through streaming, you can get instant experience of chatting without any delay

eg- Chat Application just like WhatsApp/Instagram

 
