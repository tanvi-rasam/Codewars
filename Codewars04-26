Q1] Trolls are attacking your comment section!

A common way to deal with this situation is to remove all of the vowels from the trolls' comments, neutralizing the threat.

Your task is to write a function that takes a string and return a new string with all vowels removed.

For example, the string "This website is for losers LOL!" would become "Ths wbst s fr lsrs LL!".

Solutions

function disemvowel(str) {
  return str.split('').filter(x => !['a','e','i','o','u','A','E','I','O','U'].includes(x)).join('');

}

function disemvowel(str) {
  return str.replace(/[aeiou]/gi,'');
}


Q2] In this little assignment you are given a string of space separated numbers, and have to return the highest and lowest number.

Example:

highAndLow("1 2 3 4 5");  // return "5 1"
highAndLow("1 2 -3 4 5"); // return "5 -3"
highAndLow("1 9 3 4 -5"); // return "9 -5"

Solutions-
function highAndLow(numbers){
  // ...
  num_arr = numbers.split(' ').map(x => parseInt(x));
  return Math.max(...num_arr) + ' ' + Math.min(...num_arr);
}

function highAndLow(numbers){
  // ...
  num_arr = numbers.split(' ');
  return `${Math.max(...num_arr)} ${Math.min(...num_arr)}`;
}

Q3] Welcome. In this kata, you are asked to square every digit of a number and concatenate them.

For example, if we run 9119 through the function, 811181 will come out, because 92 is 81 and 12 is 1.

Note: The function accepts an integer and returns an integer
Solution- 
function squareDigits(num){
  //may the code be with you
  return parseInt((''+num).split('').map(x => x ** 2).join(''));
  }
  
 Q4]  Your task is to make a function that can take any non-negative integer as an argument and return it with its digits in descending order. Essentially, rearrange the digits to create the highest possible number.

Examples:
Input: 42145 Output: 54421
Solution
function descendingOrder(n){
  //...
  return parseInt((''+n).split('').sort((a,b) => b -a).join(''))
}



 
