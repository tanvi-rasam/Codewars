Q1] Our football team finished the championship. The result of each match look like "x:y". Results of all matches are recorded in the collection.

For example: ["3:1", "2:2", "0:1", ...]

Write a function that takes such collection and counts the points of our team in the championship. Rules for counting points for each match:

if x>y - 3 points
if x<y - 0 point
if x=y - 1 point

Solutions- 
function points(games) {
  // your code here
  return games.reduce(((acc,currVal) => acc + (currVal[0] >= currVal[2] 
                                        ? (currVal[0] === currVal[2] 
                                           ? 1
                                           : 3 ) 
                                        : 0 )) ,0);
                                        
   return games.reduce((acc, currVal) => acc + (currVal[0] < currVal[2] ? 0 : currVal[0] > currVal [2] ? 3 : 1), 0)
   
}

Q2] It's the academic year's end, fateful moment of your school report. The averages must be calculated. All the students come to you and entreat you to calculate their average for them. Easy ! You just need to write a script.

Return the average of the given array rounded down to its nearest integer.

The array will never be empty.

Solution:
function getAverage(marks){
  //TODO : calculate the downwar rounded average of the marks array
  return Math.floor(marks.reduce((a,c) => a + c) / marks.length);
}


Q3] Build a function that returns an array of integers from n to 1 where n>0.

Example : n=5 --> [5,4,3,2,1]

Solution- 
const reverseSeq = n => {
  //return n ? [n, ...reverseSeq(n-1)] : []; // stack overflow for larger values
  
  return [...Array(n)].map((num,index) => index + 1).reverse();
  
  return Array.from({length: n + 1}, (v, i) => i).reverse().slice(0,-1);
};
