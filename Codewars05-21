Q1] If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Finish the solution so that it returns the sum of all the multiples of 3 or 5 below the number passed in.

Note: If the number is a multiple of both 3 and 5, only count it once. Also, if a number is negative, return 0(for languages that do have them)

Solution-
function solution(number){
  return number >= 0 
      ? [...new Array(number).keys()]
          .reduce((a,c) => 
                  a + (c % 3 === 0 || c % 5 === 0 ? c : 0)
            , 0) 
      : 0;
}

Q2] Given an array of integers, find the one that appears an odd number of times.

There will always be only one integer that appears an odd number of times.

Solution-
function findOdd(A) {
  var dict = {};
  A.forEach(x => dict[x] = dict[x] ? dict[x] + 1 : 1);
  
 for (key in dict) {
   if (dict[key] % 2 !== 0) {
     return Number(key)
   }
 }
}

function findOdd(A) {
  //happy coding!
  return A.reduce((a,c) => a ^ c); //XOR operator - when same returns 0
}

Q3] Given n, take the sum of the digits of n. If that value has more than one digit, continue reducing in this way until a single-digit number is produced. The input will be a non-negative integer.

Examples
    16  -->  1 + 6 = 7
   942  -->  9 + 4 + 2 = 15  -->  1 + 5 = 6
132189  -->  1 + 3 + 2 + 1 + 8 + 9 = 24  -->  2 + 4 = 6
493193  -->  4 + 9 + 3 + 1 + 9 + 3 = 29  -->  2 + 9 = 11  -->  1 + 1 = 2

Solution

function digital_root(n) {
  if (n < 10) {
    return n;
  }
  
  return digital_root(
    n.toString().split('').reduce((a,c) => a + +c, 0)
  );
}

Q4] Write a function that takes in a string of one or more words, and returns the same string, but with all five or more letter words reversed (like the name of this kata).

Strings passed in will consist of only letters and spaces.
Spaces will be included only when more than one word is present.
Examples:

spinWords("Hey fellow warriors") => "Hey wollef sroirraw" 
spinWords("This is a test") => "This is a test" 
spinWords("This is another test") => "This is rehtona test"

Solution-
function spinWords(string){
  return string.split(' ').map(x => x.length >= 5 
                                    ? x.split('').reverse().join('')
                                    : x
                              ).join(' ');
}

